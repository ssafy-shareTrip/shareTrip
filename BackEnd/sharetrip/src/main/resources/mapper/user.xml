<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.orj.sharetrip.user.model.mapper.UserMapper">

	<resultMap type="userDto" id="user">
		<result column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="password" property="password"/>
		<result column="email_id" property="emailId"/>
		<result column="email_domain" property="emailDomain"/>
		<result column="join_date" property="joinDate"/>
		<result column="birth" property="birth"/>
		<result column="gender" property="gender"/>
		<result column="profile_image" property="profileImage"/>
		<result column="token" property="Token"/>
	</resultMap>

	<insert id="joinUser" parameterType="userDto" >
		insert into user
		values (#{id},#{password},#{name},#{emailId},#{emailDomain},now(),null,null,null,null);
	</insert>

	<select id="login" parameterType="map" resultMap="user">
		select id, name, token
		from user
		where id = #{id} and password = #{password}
	</select>
	
	<select id="userInfo" parameterType="string" resultMap="user">
		select name, id, email_id, email_domain, join_date
		from user
		where id = #{id}
	</select>
	
	<update id="saveRefreshToken" parameterType="map">
		update user
		set token = #{token}
		where id = #{id}
	</update>
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from user
		where id = #{id}
	</select>
	
	<update id="deleteRefreshToken" parameterType="map">
		update user
		set token = #{token, jdbcType=VARCHAR}
		where id = #{id}
	</update>
	
	<insert id="followUser" parameterType="map">
		insert into user_follow (id_from, id_to, follow_time)
		values (#{userId}, #{idTo}, now())
	</insert>
	
	<delete id="unFollowUser" parameterType="map">
		delete from user_follow
		where id_from = #{userId} and id_to = #{idTo}
	</delete>
	
	<update id="modifyUser" parameterType="userDto">
		update user
		set password = #{password}, name = #{name}, email_id = #{emailId}, email_domain = #{emailDomain}
		, profile_image = #{profileImage}, birth = #{birth}, gender = #{gender}
		where id = #{id}
	</update>
	
	<delete id="deleteUser" parameterType="userDto">
		delete from user
		where id = #{id} and password = #{password}
	</delete>
	
</mapper>