<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.orj.sharetrip.map.model.mapper.MapMapper">

	<resultMap type="sidoGugunCodeDto" id="sidoGugun">
		<result column="sido_code" property="sidoCode" />
		<result column="sido_name" property="sidoName" />
		<result column="gugun_code" property="gugunCode" />
		<result column="gugun_name" property="gugunName" />
	</resultMap>

	<resultMap type="AttractionDto" id="attraction">
		<result column="content_id" property="contentId" />
		<result column="content_type_id" property="contentTypeId" />
		<result column="title" property="title" />
		<result column="addr1" property="addr1" />
		<result column="addr2" property="addr2" />
		<result column="tel" property="tel" />
		<result column="first_image" property="firstImage" />
		<result column="first_image2" property="firstImage2" />
		<result column="sido_code" property="sidoCode" />
		<result column="gugun_code" property="gugunCode" />
		<result column="latitude" property="latitude" />
		<result column="longitude" property="longitude" />
		<result column="isLike" property="isLike" />
		<result column="isBookmark" property="isBookmark" />
		<result column="totalLike" property="totalLike" />
		<result column="totalBookmark" property="totalBookmark" />
	</resultMap>

	<resultMap type="memoDto" id="memo">
		<result column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="name" property="userName" />
		<result column="content" property="content" />
		<result column="regist_time" property="registTime" />
	</resultMap>

	<resultMap type="AttractionDto" id="viewAttraction"
		extends="attraction">
		<result column="overview" property="overview" />
		<collection property="memos" column="content_id"
			javaType="list" ofType="memoDto" select="memoList"></collection>
	</resultMap>

	<resultMap type="statDto" id="stat">
		<collection property="readCntOrder" column="start"
			javaType="list" ofType="AttractionDto" select="readCntList"></collection>
		<collection property="likeOrder" column="start"
			javaType="list" ofType="AttractionDto" select="likeList"></collection>
		<collection property="bookmarkOrder" column="start"
			javaType="list" ofType="AttractionDto" select="bookmarkList"></collection>
		<collection property="pathOrder" column="start"
			javaType="list" ofType="AttractionDto" select="pathList"></collection>
		<collection property="genderOrder" column="start"
			javaType="list" ofType="AttractionDto" select="genderList"></collection>
		<collection property="birthOrder" column="start"
			javaType="list" ofType="AttractionDto" select="birthList"></collection>
	</resultMap>

	<select id="getStat" resultMap="stat">
		select 1 as start from dual;
	</select>



	<select id="birthList" resultMap="attraction">
		select *
		from attraction_info i
		join (
		select row_number() over(partition by floor((year(now()) -
		year(birth)) /
		10) order by count(*) desc) place,floor((year(now()) -
		year(birth)) / 10)* 10
		age, content_id, count(*) totalLike
		from
		attraction_fav f
		join user u
		on u.id = f.user_id
		where category = 0
		and
		birth is not null
		group by floor((year(now()) - year(birth)) / 10)
		,content_id
		) s
		using (content_id)
		where place &lt; 4
		order by age, totalLike
		desc, place
	</select>

	<select id="genderList" resultMap="attraction">
		select *
		from attraction_info i
		join (
		select row_number() over(partition by gender order by count(*)) place, gender,
		content_id, count(*) totalLike
		from attraction_fav f
		join user u
		on u.id = f.user_id
		where category = 0
		and gender in ('여성', '남성')
		group by gender, content_id
		) s
		using (content_id)
		where place &lt; 4
		order by gender, totalLike desc, place;
	</select>

	<select id="pathList" resultMap="attraction">
		select row_number() over(order by cnt desc) as place, content_Id, first_image, addr1, title, cnt
		from attraction_info
		join (select content_id, count(*) cnt from trip_attraction group by
		content_id) s
		using(content_id)
		order by cnt desc, place
		limit 3;
	</select>

	<select id="bookmarkList" resultMap="attraction">
		select row_number() over(order by
		totalBookmark desc) as place, content_Id, first_image, addr1, title, totalbookmark
		from attraction_info
		i
		join (
		select content_id, count(*) totalBookmark
		from attraction_fav f
		where category = 1
		group by content_id
		) s
		using (content_id)
		order by
		totalBookmark desc, place
		limit 3;
	</select>

	<select id="likeList" resultMap="attraction">
		select row_number() over(order by totalLike
		desc) as place, content_Id, first_image, addr1, title, totalLike
		from attraction_info i
		join (
		select content_id, count(*) totalLike
		from attraction_fav f
		where
		category = 0
		group by content_id
		) s
		using (content_id)
		order by totalLike
		desc, place
		limit 3;
	</select>
	<select id="readCntList" resultMap="attraction">
		select row_number() over(order by readcount desc) as place, content_Id, first_image, addr1, title, readcount
		from attraction_info
		order by readcount desc, place
		limit 3;
	</select>

	<select id="getSido" resultMap="sidoGugun">
		select left(sido_code,2)
		sido_code, sido_name
		from sido
		order by sido_code
	</select>

	<select id="getGugunInSido" parameterType="string"
		resultMap="sidoGugun">
		select left(gugun_code,5) gugun_code, gugun_name
		from gugun
		where sido_code = #{sido}
		order by gugun_code
	</select>

	<select id="getAttrList" parameterType="map"
		resultMap="attraction">
		select *
		<if test="userId != null">
			, if(lid is null, 0, 1) isLike, if(bid is null, 0, 1)
			isBookmark
		</if>
		<if test="userId == null">
			, 0 isLike, 0 isBookmark
		</if>
		from attraction_info a
		<if test="userId != null">
			left outer join (
			select content_id, user_id lid from
			attraction_fav where user_id =
			#{userId} and category = 0
			) l
			using
			(content_id)
			left outer join (
			select content_id, user_id bid from
			attraction_fav where user_id =
			#{userId} and category = 1
			) b
			using
			(content_id)
		</if>
		where 1=1
		<if test="sidoCode != null">
			and sido_code = #{sidoCode}
			<if test="gugunCode != null">
				and gugun_code = #{gugunCode}
			</if>
		</if>
		<if test="contentTypeId != null">
			and content_type_id in
			<foreach collection="contentTypeId" item="TypeId"
				separator=", " open="(" close=")">#{TypeId}</foreach>
		</if>
		<if test="keyword != null">
			and title like concat('%',#{keyword},'%')
		</if>
		<if test="mapX != null and mapY != null">
			order by (#{mapX} - latitude) * (#{mapX} - latitude) +
			(#{mapY} - longitude) * (#{mapY} - longitude)
		</if>
		limit 30;
	</select>

	<select id="getAttrInfo" parameterType="map"
		resultMap="viewAttraction">
		select *, (
		select count(*) totalLike
		from attraction_fav f
		where
		category = 0 and i.content_id = content_id
		) totalLike,(
		select count(*)
		totalLike
		from attraction_fav f
		where category = 1 and i.content_id =
		content_id
		) totalBookmark
		<if test="userId != null">
			, if(lid is null, 0, 1) isLike, if(bid is null, 0, 1)
			isBookmark
		</if>
		<if test="userId == null">
			, 0 isLike, 0 isBookmark
		</if>
		from attraction_info i join attraction_description d using(content_id)
		<if test="userId != null">
			left outer join (
			select content_id, user_id lid from
			attraction_fav where user_id =
			#{userId} and category = 0
			) l
			using
			(content_id)
			left outer join (
			select content_id, user_id bid from
			attraction_fav where user_id =
			#{userId} and category = 1
			) b
			using
			(content_id)
		</if>
		where content_id =
		#{contentId}
	</select>

	<select id="memoList" resultMap="memo">
		select m.id, content, user_id,
		name, regist_time
		from attraction_memo m join user u on m.user_id =
		u.id
		where content_id = #{contentId}
		order by
		regist_time desc;
	</select>

	<select id="getAttrFav" parameterType="string" resultType="int">
		select content_id, category
		from attraction_fav
		where user_id =
		#{userId};
	</select>

</mapper>